// <auto-generated />
using System;
using PulseStore.DAL.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PulseStore.DAL.Migrations
{
    [DbContext(typeof(PulseStoreContext))]
    [Migration("20231124082038_AddOrderDocuments")]
    partial class AddOrderDocuments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PulseStore.BLL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BCAA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fat Burner"
                        });
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.OrderDocuments.OrderDocument", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("OrderId", "Type");

                    b.ToTable("OrderDocuments");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Orders.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerItem")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxTemperature")
                        .HasColumnType("int");

                    b.Property<int?>("MinTemperature")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateCreated = new DateTime(2023, 9, 28, 16, 45, 20, 180, DateTimeKind.Unspecified).AddTicks(3137),
                            Description = "High quality balanced amino acid complex.",
                            IsPublished = true,
                            MaxTemperature = 25,
                            MinTemperature = 0,
                            Name = "Olimp Labs, BCAA Xplode Powder, 500 g",
                            Price = 25m
                        });
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.ProductPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPhotos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "https://PulseStorestorage.blob.core.windows.net/photo-container/testproduct.jpeg",
                            ProductId = 1,
                            SequenceNumber = 1
                        });
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.SearchHistoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("SearchHistory");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Security.NfcDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NUID")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("NUID")
                        .IsUnique();

                    b.ToTable("NfcDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NUID = "231C0B0E"
                        },
                        new
                        {
                            Id = 2,
                            NUID = "2362AD33"
                        },
                        new
                        {
                            Id = 3,
                            NUID = "3309060E"
                        },
                        new
                        {
                            Id = 4,
                            NUID = "63D3159A"
                        },
                        new
                        {
                            Id = 5,
                            NUID = "B39A689A"
                        },
                        new
                        {
                            Id = 6,
                            NUID = "E9675F15"
                        });
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Security.SecurityUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("NfcDeviceId")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NfcDeviceId");

                    b.ToTable("SecurityUsers");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.SensorReadings.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeviceMacAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GatewayMacAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SensorType")
                        .HasColumnType("int");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceMacAddress")
                        .IsUnique();

                    b.HasIndex("StockId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.SensorReadings.SensorReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Humidity")
                        .HasColumnType("real");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SensorId")
                        .HasColumnType("int");

                    b.Property<float?>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("SensorReadings");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Stock 1"
                        });
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.StockProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.HasIndex("ProductId", "StockId")
                        .IsUnique();

                    b.ToTable("StockProducts");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.TemplateFiles.TemplateFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("TemplateFiles");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.UserCartProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId", "UserId")
                        .IsUnique();

                    b.ToTable("UserCartProducts");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.UserProductView", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ViewedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("UserProductViews");
                });

            modelBuilder.Entity("SecurityUserStock", b =>
                {
                    b.Property<int>("SecurityUsersId")
                        .HasColumnType("int");

                    b.Property<int>("StocksId")
                        .HasColumnType("int");

                    b.HasKey("SecurityUsersId", "StocksId");

                    b.HasIndex("StocksId");

                    b.ToTable("SecurityUserStocks", (string)null);
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.OrderDocuments.OrderDocument", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Orders.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Orders.OrderProduct", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Orders.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PulseStore.BLL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Product", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.ProductPhoto", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Product", "Product")
                        .WithMany("ProductPhotos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Security.SecurityUser", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Security.NfcDevice", "NfcDevice")
                        .WithMany("SecurityUsers")
                        .HasForeignKey("NfcDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NfcDevice");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.SensorReadings.Sensor", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Stock", "Stock")
                        .WithMany("Sensors")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.SensorReadings.SensorReading", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.SensorReadings.Sensor", "Sensor")
                        .WithMany("SensorReadings")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.StockProduct", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Product", "Product")
                        .WithMany("StockProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PulseStore.BLL.Entities.Stock", "Stock")
                        .WithMany("StockProducts")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.UserCartProduct", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Product", "Product")
                        .WithMany("UserCartProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.UserProductView", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Product", "Product")
                        .WithMany("UserProductViews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SecurityUserStock", b =>
                {
                    b.HasOne("PulseStore.BLL.Entities.Security.SecurityUser", null)
                        .WithMany()
                        .HasForeignKey("SecurityUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PulseStore.BLL.Entities.Stock", null)
                        .WithMany()
                        .HasForeignKey("StocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Orders.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Product", b =>
                {
                    b.Navigation("ProductPhotos");

                    b.Navigation("StockProducts");

                    b.Navigation("UserCartProducts");

                    b.Navigation("UserProductViews");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Security.NfcDevice", b =>
                {
                    b.Navigation("SecurityUsers");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.SensorReadings.Sensor", b =>
                {
                    b.Navigation("SensorReadings");
                });

            modelBuilder.Entity("PulseStore.BLL.Entities.Stock", b =>
                {
                    b.Navigation("Sensors");

                    b.Navigation("StockProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
